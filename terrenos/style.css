@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500&display=swap');

/*-----------------------------------------------------------------

CSS Reset

------------------------------------------------------------------*/

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

input[type=range] {
    -webkit-appearance: none; /* Hides the slider so that custom slider can be made */
    width: 100%; /* Specific width is required for Firefox. */
    background: transparent; /* Otherwise white in Chrome */
  }
  
  input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
  }
  
  input[type=range]:focus {
    outline: none; /* Removes the blue border. You should probably do some kind of focus styling for accessibility reasons though. */
  }
  
  input[type=range]::-ms-track {
    width: 100%;
    cursor: pointer;
  
    /* Hides the slider so custom styles can be added */
    background: transparent; 
    border-color: transparent;
    color: transparent;
  }

/*-----------------------------------------------------------------

Type

------------------------------------------------------------------*/
:root{
    font-size: 14.5px;
  /*Variables de tama√±o de texto*/
  --fz-10pt: 0.85rem;
  --fz-12pt: 1rem;
  --fz-14pt: 1.125rem;
  --fz-16pt: 1.3rem;
  --fz-18pt: 1.5rem;
  --fz-20pt: 1.625rem;
  --fz-22pt: 1.83rem;
  --fz-24pt: 2rem;
  --fz-30pt: 2.5rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

label, input{
    font-size: var(--fz-14pt);
    font-family: 'IBM Plex Mono', monospace;
    color: var(--terra-gray);
    font-weight: 400;
}

label strong{
    font-weight: 500;
}

/*-----------------------------------------------------------------

Layout

------------------------------------------------------------------*/
:root{
    --terra-gray: #999999;
    --terra-cyan: cyan;
}

body{
    height: 100vh;
    width: 100vw;
    overflow: hidden;
}

/*----------------------- PATTERN BG ----------------------------*/

#pattern-container{
    background-size: 40rem;
    width: 100%;
    height: 100%;
}

#pattern{
    width: 100%;
    height: 100%;
    background-repeat: repeat;
    background-position: 0 0;
    background-size: 900px;
    cursor: grab;
}

.pencil-lines{
    filter: url(#pencilTexture3)
}

#pattern.dragging{
    cursor: grabbing;
}

#pattern-container:before{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    height: 1%;
    background: cyan;
    z-index: 1;
    animation-name: loading;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    pointer-events: 0;

    opacity: 0;
    transition: opacity 0.3s;
    
}

@keyframes loading{
    0% {
        width: 0;
        left: 0;
    }
    
    50% {
        width: 100%;
        left: 0;
    }
    
    100%{
        width: 100%;
        left: 100%;
    }
}

#pattern-container:after{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    background: white;
    pointer-events: none;

    opacity: 0;
    transition: opacity 0.3s;
}

#pattern-container.loading::after{
    opacity: 0.9;
}

#pattern-container.loading::before{
    opacity: 1;
}

/*----------------------- P5JS CANVAS ----------------------------*/

#canvas-container{
    position: absolute;
    left: 0;
    top: 0;
    visibility: hidden;
    pointer-events: none;
    z-index: -1;
}

/*----------------------- CONTROL FORMS (GENERAL) ----------------------------*/

#terrain-controls{
    position: absolute;
    right: 50px;
    top: 50%;
    transform: translateY(-50%);
    
    min-width: 20rem;
    z-index: 2;
}

#terrain-controls form{
    background-color: white;
    box-shadow: -5px -5px 10px rgba(0, 0, 0, 0.1), 3px 7px 5px rgba(0, 0, 0, 0.05);
    padding: 2.5rem;
}

#terrain-controls form:not(:first-child){
    margin-top:  1rem;
}

fieldset.terrain-control-group:first-child{
    margin-bottom: 1rem;
}

fieldset.control-area:not(:first-child){
    margin-top: 1.5rem;
}

.column-layout{
    display: flex;
    flex-direction: column;
}

label{
    margin-bottom: 1em;
}


/*----------------------- ZOOM CONTROL ----------------------------*/

form#zoom-control{
    padding-top: 1rem;
    padding-bottom: 1rem;
    display: flex;
    flex-direction: row;
    align-items: center;

    /* transition: opacity 0.3s;
    opacity: 0.5; */
}

/* form#zoom-control:hover{
    opacity: 1;
} */

svg.zoom-icon{
    height: 1.5rem;
    width: auto;
}

svg .zoom-icon-path{
    fill: var(--terra-gray);
}

#zoom-range{
    margin-left: 0.8rem;
    margin-right: 0.8rem;
}


/*----------------------- RANGE CONTROLS ----------------------------*/

label[for*=-range]{
    display: flex;
    justify-content: space-between;
}

input[type=range]::-moz-range-thumb{
    background: var(--terra-cyan);
    border: none;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 100%;
    cursor: grab;
}

input.grabbing[type=range]::-moz-range-thumb{
    cursor: grabbing;
}

input[type=range]::-webkit-slider-thumb{
    background: var(--terra-cyan);
    border: none;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 100%;
    cursor: grab;
    margin-top: -0.75rem;
}

input.grabbing[type=range]::-webkit-slider-thumb{
    cursor: grabbing;
}

input[type=range]::-moz-range-track {
    background: var(--terra-gray);
    height: 2px;
}

input[type=range]::-webkit-slider-runnable-track{
    background: var(--terra-gray);
    height: 0.1rem;
    margin-top: 0.7rem;
    margin-bottom: 0.7rem;
}

/*----------------------- RANDOM SEED CONTROL ----------------------------*/

fieldset.control-area.pencil-seed-control{
    display: grid;
    grid-template-columns: auto auto 1fr;
    grid-column-gap: 1.5rem;
}

input#random-seed{
    padding-left: 0.5em;
    outline: 1px solid var(--terra-gray);
    border: 1px solid transparent;
    transition: 0.2s;
    max-width: 10rem;
}

input#random-seed:focus{
    outline: 2px solid var(--terra-cyan);
    -moz-appearance:none;
    -webkit-appearance:none;
}

label[for=use-pencil-stroke]::after{
    content: ' ';
}

label[for=use-pencil-stroke]{
    white-space: pre;
}

/*----------------------- TOGGLE CONTROLS ----------------------------*/

div.switch{
    position: relative;
    background: lightgray;
    border-radius: 1000000px;
    height: 100%;
    display: flex;
    align-items: center;
    width: 85%;
}

div.switch input{
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 99999;
    cursor: pointer;
}

div.switch .toggle-handle{
    width: 50%;
    height: 0px;
    padding-top: 50%;
    position: relative;
    left: 0;
    transition: left 0.3s;
}

div.switch input:checked ~ .toggle-handle{
    left: 50%;
}

div.switch .toggle-handle:after{
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background-color: var(--terra-gray);
    position: absolute;
    top: 0;
    border-radius: 100000px;
    transition: background-color 0.3s;
}

div.switch input:checked ~ .toggle-handle:after{
    background-color: var(--terra-cyan);
}

/*----------------------- COLOR CONTROLS ----------------------------*/

fieldset.control-area.color-controls{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: 1.5rem;
}

label[for*=color-]{
    margin-bottom: 0.7em;
}

input[id*=color-]{
    margin: 0;
    border: none;
    padding: 0;
    min-width: 80%;
    min-height: 2rem;
    cursor: pointer;
}

input#color-grid,
label[for=color-grid]{
    opacity: 1;
    transition: opacity 0.3s;
}

input#color-grid[disabled],
label[for=color-grid].disabled-input{
    opacity: 0.3;
    cursor: not-allowed;
}

/*----------------------- CONTROL BUTTONS ----------------------------*/

fieldset.control-area.button-controls{
    display: grid;
    grid-template-columns: 1fr auto auto;
    grid-column-gap: 1rem;
    margin-top: 2.5rem;
}

.terrain-button{
    border-radius: 0;
    border: none;
    background-color: var(--terra-cyan);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.85rem;
    cursor: pointer;
    transition: 0.4s;
}

.terrain-button[disabled]{
    background-color: lightgray;
    cursor: not-allowed;
}

.terra-button-path{
    fill:white;
}

.stroked-button{
    stroke: white;
    stroke-width: 1;
}

.terrain-button svg{
    width: 1.5rem;
    height: 1.5rem;
}

#refresh-button:not([disabled]):hover svg{
    transform-origin: 46.7% 50%;
    animation-name: refresh;
    animation-duration: 0.6s;
    animation-iteration-count: 1;
}

@keyframes refresh {
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(360deg);
    }
}

#save-button:not([disabled]):hover svg polygon{
    animation-name: download;
    animation-duration: 0.6s;
    animation-iteration-count: 1;
}

@keyframes download {
    0%{
        transform: translateY(0);
    }
    50%{
        transform: translateY(100%);
    }
    51%{
        transform: translateY(-100%);
    }
    100%{
        transform: translateY(0);
    }
}

#run-button:not([disabled]):hover svg{
    animation-name: nudge;
    animation-duration: 0.5s;
    animation-iteration-count: 1;
}

@keyframes nudge {
    0%{
        transform: translateX(0);
    }
    50%{
        transform: translateX(20%);
    }
    100%{
        transform: translateX(0);
    }
}